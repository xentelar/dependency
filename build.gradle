
plugins {
    id("java-gradle-plugin")
    id("groovy")
    id("maven-publish")
    id("com.gradle.plugin-publish") version "2.0.0"
    id("org.jreleaser") version "1.20.0"
}

group = "com.xentelar"
ext.artifactId = "dependency"
version = "0.1.0"
ext.version = "0.1.0"
ext.name = "Dependencies plugin"
ext.description = "Gradle plugin to add external git repos as project dependencies"
ext.github = "https://github.com/xentelar/dependency"
ext.githubScm = "scm:git@github.com:xentelar/dependency.git"

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation("org.eclipse.jgit:org.eclipse.jgit:7.3.0.202506031305-r")
    implementation("org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:7.3.0.202506031305-r")
}

java {
    withJavadocJar()
    withSourcesJar()
}

gradlePlugin {
    website = project.ext.github
    vcsUrl = project.ext.github

    plugins {
        dependency {
            id = "com.xentelar.dependency"
            displayName = project.ext.name
            description = project.ext.description
            tags = ["git", "dependency"]
            implementationClass = "dependency.DependencyPlugin"
            //version = project.ext.version
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            from components.java

            //groupId = project.group
            //artifactId = project.ext.artifactId
            version = project.ext.version

            pom {
                name = project.ext.name
                description = project.ext.description
                url = project.ext.github
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "xentelar"
                        name = "Xentelar"
                    }
                }
                scm {
                    connection = project.ext.githubScm
                    developerConnection = project.ext.githubScm
                    url = project.ext.github
                }
            }
        }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir("staging-deploy")
        }
    }
}

jreleaser {
    signing {
        active = "ALWAYS"
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = "ALWAYS"
                    url = "https://central.sonatype.com/api/v1/publisher"
                    stagingRepository("build/staging-deploy")
                }
            }
        }
    }
}